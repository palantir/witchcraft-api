apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.external-publish-jar'

sourceCompatibility = 11

dependencies {
    implementation project(':witchcraft-logging-api:witchcraft-logging-api-objects'), {
        exclude group: 'org.slf4j'
    }
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'

    annotationProcessor 'org.immutables:value'
    compileOnly 'org.immutables:value-annotations'

    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core'
}

versionRecommendations {
    excludeConfigurations 'idea'
}

versionsLock {
    // 'org.jetbrains.intellij' creates a dependency on *IntelliJ*, which GCV cannot resolve
    disableJavaPluginDefaults()
}

def minimumIntellijBuild = '211.7628.21' // 2021.1.3
intellij {
    pluginName = 'witchcraft-logging-idea'
    version = minimumIntellijBuild
    updateSinceUntilBuild = false
}

patchPluginXml {
    version = project.version
    sinceBuild = minimumIntellijBuild
}

publishPlugin {
    token = System.env.JETBRAINS_PLUGIN_REPO_TOKEN
}

runPluginVerifier {
    ideVersions = [
            // Idea Community
            "IC-2021.2",
            // Goland
            "GO-2021.2"]
}

check.dependsOn buildPlugin, verifyPlugin, runPluginVerifier
tasks.publishPlugin.onlyIf { versionDetails().isCleanTag && System.env.JETBRAINS_PLUGIN_REPO_TOKEN != null }
tasks.publish.dependsOn publishPlugin
buildSearchableOptions.enabled = false
// Prevent nebula.maven-publish from trying to publish components.java - we are publishing our own different artifact
ext."nebulaPublish.maven.jar" = false
publishing {
    publications {
        nebula(MavenPublication) {
            artifact buildPlugin
        }
    }
}
